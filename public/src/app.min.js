/*global angular*/
(function () {
    'use strict';
    
    var app = angular.module('app', [
        'app.common',
        'app.overview',
        'app.exchange',
        'app.login',
        'ngAnimate',
        'ui.router'
    ]);
    
    app.config(['$stateProvider', '$urlRouterProvider',
                function ($stateProvider, $urlRouterProvider) {
                    $urlRouterProvider.otherwise('/drink-exchange');
                }
           ]);
    
    // Check authentication
    app.run([
        '$rootScope', 'DataService', '$state',
        function ($rootScope, dataService, $state) {
            $rootScope.$on('$stateChangeStart', function (event, toState, toParams, fromState, fromParams) {
                if (toState.data && toState.data.login && toState.data.login === true) {
                    if (!dataService.user) {
                        // Cancel the state transition
                        event.preventDefault();
                        
                        // Go to the login state
                        $state.go('login');
                    }
                }
            });
        }
    ]);

    app.constant('FBURL', 'https://drink-exchange-login.firebaseio.com/');
}());
(function () {
    'use strict';
    
    angular.module('app.common', []);
}());
(function () {
    'use strict';
    
    var app = angular.module('app.login', ['ui.router']);
    
    app.config(['$stateProvider', '$urlRouterProvider',
                function ($stateProvider, $urlRouterProvider) {
                    $stateProvider
                        .state('login', {
                            url: '/login',
                            templateUrl: 'app/login/views/login.html'
                        })
                        .state('login.new', {
                            url: '/new',
                            templateUrl: 'app/login/views/login.new.html'
                        });
                }
           ]);
    
}());
(function () {
    'use strict';
    
    
    var app = angular.module('app.exchange', [
        'ui.router',
        'firebase'
    ]);
    
    app.config(['$stateProvider', '$urlRouterProvider', function($stateProvider, $urlRouterProvider) {
        $stateProvider
            .state('drink-exchange', {
                url: '/drink-exchange',
                data: {
                    login: true
                },
                templateUrl: 'app/exchange/views/exchange.html'
            })
            .state('drink-exchange.new', {
                url: '/new',
                data: {
                    login: true
                },
                templateUrl: 'app/exchange/views/exchange.new.html'
            });
    }]);
    
}());
(function () {
    'use strict';
    
    
    var app = angular.module('app.overview', [
       'ui.router' 
    ]);
    
    app.config(['$stateProvider', function ($stateProvider) {
        $stateProvider
            .state('overview', {
                url: '/overview',
                data: {
                    login: true
                },
                templateUrl: 'app/overview/views/overview.html'
            });
    }]);
    
    
    
}());
(function () {
    'use strict';
    
    var DataService = (function () {
        
        function DataService(FBURL, firebase) {
            var self = this;
            
            this.successLoginCb = function () {
            };
            
            this._firebase = firebase;
            this._ref = new Firebase(FBURL);
            
            this.user;
            
            this._authClient = new FirebaseSimpleLogin(this._ref, function (error, user) {
                if (error) {
                    alert('Error...');
                    return;
                }
                
                if (user) {
                    self.user = user;
                    self.successLoginCb();    
                }
            });
        }
        
        DataService.prototype.get = function (child) {
            var reference = this._ref.child('/' + child);
            return this._firebase(reference);
        };
        
        DataService.prototype.set = function (child, value) {
            var reference = this._ref.child('/' + child);
            this._firebase(reference).$set(value);
        };
        
        DataService.prototype.login = function (user) {
            this._authClient.login('password', {
                email: user.username,
                password: user.password,
                rememberMe: true
            });
        };
        
        DataService.prototype.register = function (user, successCb, errorCb) {
            this._authClient.createUser(user.username, user.password, function (error, user) {
                if(error) {
                    if(errorCb) {                     
                        errorCb(error);
                    }
                } else if(successCb) {
                    successCb();
                }
            });
        };
        
        DataService.$inject = ['FBURL', '$firebase'];
        
        return DataService;
        
    }());
    
    angular.module('app.common').service('DataService', DataService);
}());
(function () {
    'use strict';
    
    var ExchangeCtrl = (function () {
        
        var calculatePrice = {
            '+': function (price, rating) {
                return +(price + (rating / 100));
            },
            '-': function (price, rating) {
                return +(price - (rating / 100));
            }
        };
        
        function ExchangeCtrl(scope, DataService) {
            this.scope = scope;
            this.dataService = DataService;
            
            this.bindExchange();
        }
        
        ExchangeCtrl.prototype.bindExchange = function () {
            var vm = this;
            var syncObject = vm.dataService.get(this.dataService.user.uid).$asObject();
            
            syncObject.$bindTo(vm.scope, 'overview');
        };
        
        ExchangeCtrl.prototype.vote = function (exchange) {
            var updatedExchange = exchange,
                vm = this,
                rating = updatedExchange.rating,
                total = 0;
            
            updatedExchange.amount = updatedExchange.amount + 1;
            updatedExchange.price = calculatePrice['+'](updatedExchange.price, updatedExchange.rating);
            
            // Update this price
            vm.dataService.set(exchange.name, updatedExchange);
            
            // Calculate total
            angular.forEach(vm.scope.overview, function (ex) {
                if (ex && ex.name != exchange.name) {
                    total += 1;
                }
            });
            
            // Update other prices
            angular.forEach(vm.scope.overview, function (ex) {
                
                if (ex && ex.name != exchange.name) {
                    ex.price = calculatePrice['-'](ex.price, rating / total);
                    
                    if (ex.price < 1) {
                        ex.price = 1;
                    }
                    
                    vm.dataService.set(ex.name, ex);
                }
                
            });
        };

        ExchangeCtrl.$inject = ['$scope', 'DataService'];
        
        return ExchangeCtrl;
        
    }());
    
    
    angular.module('app.exchange').controller('ExchangeCtrl', ExchangeCtrl);
    
}());
(function () {
    'use strict';
    
    var NewExchangeCtrl = (function () {
        
        function NewExchangeCtrl($state, DataService) {
            this.newExchange = {};
            this.dataService = DataService;
            this.$state = $state;
        }
        
        NewExchangeCtrl.prototype.save = function (exchange) {
            if (exchange.name && exchange.rating) {
                // Set default amount to zero
                exchange.amount = 0;
                
                // Todo: save to database
                this.dataService.set(this.dataService.user.uid + '/' + exchange.name, exchange);        
                
                this.$state.go('drink-exchange');
            } else {
                // Todo: show error message
            }
        };
        
        NewExchangeCtrl.$inject = ['$state', 'DataService'];

        return NewExchangeCtrl;
        
    }());
    
    
    angular.module('app.exchange').controller('NewExchangeCtrl', NewExchangeCtrl);
    
}());
(function () {
    'use strict';
    
    angular.module('app.exchange').directive('exchange', function () {
        return {
            restrict: 'AE',
            template: '<div ng-click="vote()" class="{{customClass}} panel panel-default">'+
                        '<div class="panel-heading">'+
                            '<h3 class="panel-title">{{value.name}}</h3>'+
                        '</div>    '+
                        '<div class="panel-body">'+
                            '<h2 class="price text-center">'+
                                '{{ value.price | currency:"â‚¬ " }}'+
                            '</h2>'+
                        '</div>'+
                    '</div>',
            scope: {
                value: '=',
                customClass: '@',
                vote: '&'
            },
            link: function (scope, elem, attrs) {
                
            }
        };
    });
}());
(function () {
    
    'use strict';
    
    var LoginCtrl = (function () {
        
        function LoginCtrl(DataService, $state) {
            var self = this;
            
            this.state = $state;
            this.user = {};
            this.dataService = DataService;
            
            this.dataService.successLoginCb = function () {
                self.state.go('overview');
            };
        }
        
        LoginCtrl.prototype.login = function (user) {
            this.dataService.login(user);
        };
        
        LoginCtrl.$inject = ['DataService', '$state'];
        
        return LoginCtrl;
        
    }());
    
    angular.module('app.login').controller('LoginCtrl', LoginCtrl);
    
}());
(function () {
    'use strict';
    
    var NewUserCtrl = (function () {
        function NewUserCtrl(DataService, $state) {
            var self = this;
            
            this.user = {};
            
            this.state = $state;
            this.dataService = DataService;
            
            this.dataService.successLoginCb = function () {
                self.state.go('overview');
            };
        }
        
        NewUserCtrl.prototype.register = function (user) {
            var self = this;
            
            this.dataService.register(user, function success() {
                self.dataService.login(user);
            });
        };
        
        NewUserCtrl.$inject = ['DataService', '$state'];
        
        return NewUserCtrl;
    }());
    
    angular.module('app.login').controller('NewUserCtrl', NewUserCtrl);
    
}());
(function () {
    'use strict';
    
    var OverviewCtrl = (function () {
        function OverviewCtrl(scope, DataService) {
            this.dataService = DataService;
            this.scope = scope;
            
            this.bindOverview();
        }
        
        OverviewCtrl.prototype.bindOverview = function () {
            var vm = this;
            
            var syncObject = vm.dataService.get(vm.dataService.user.uid).$asObject();
            syncObject.$bindTo(vm.scope, 'overview');
        };
        
        OverviewCtrl.$inject = ['$scope', 'DataService'];
        
        return OverviewCtrl;
    }());
    
    
    angular.module('app.overview').controller('OverviewCtrl', OverviewCtrl);
    
}());